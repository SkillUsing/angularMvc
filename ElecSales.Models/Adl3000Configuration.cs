// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data;
using System.Data.Entity.Core.Objects;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace ElecSales.Models
{
    // ADL3000
    public partial class Adl3000Configuration : EntityTypeConfiguration<Adl3000>
    {
        public Adl3000Configuration()
            : this("dbo")
        {
        }
 
        public Adl3000Configuration(string schema)
        {
            ToTable(schema + ".ADL3000");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName("Name").IsRequired().HasColumnType("nvarchar").HasMaxLength(30);
            Property(x => x.CurrentTotalActiveEnergy).HasColumnName("Current_Total_Active_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalSpikeEnergy).HasColumnName("Current_Total_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalActivePeakEnergy).HasColumnName("Current_Total_Active_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalActiveFlatEnergy).HasColumnName("Current_Total_Active_Flat_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalActiveValleyEnergy).HasColumnName("Current_Total_Active_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalActiveEnergy).HasColumnName("Current_Forward_Total_Active_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalSpikeEnergy).HasColumnName("Current_Forward_Total_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalActivePeakEnergy).HasColumnName("Current_Forward_Total_Active_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalActiveFlatEnergy).HasColumnName("Current_Forward_Total_Active_Flat_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalActiveValleyEnergy).HasColumnName("Current_Forward_Total_Active_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalActiveEnergy).HasColumnName("Current_Reversing_Total_Active_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalSpikeEnergy).HasColumnName("Current_Reversing_Total_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalActivePeakEnergy).HasColumnName("Current_Reversing_Total_Active_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalActiveFlatEnergy).HasColumnName("Current_Reversing_Total_Active_Flat_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalActiveValleyEnergy).HasColumnName("Current_Reversing_Total_Active_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalReactiveEnergy).HasColumnName("Current_Total_Reactive_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalReactiveSpikeEnergy).HasColumnName("Current_Total_Reactive_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalReactivePeakEnergy).HasColumnName("Current_Total_Reactive_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalReactiveFlatEnergy).HasColumnName("Current_Total_Reactive_Flat_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentTotalReactiveValleyEnergy).HasColumnName("Current_Total_Reactive_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalReactiveEnergy).HasColumnName("Current_Forward_Total_Reactive_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalReactiveSpikeEnergy).HasColumnName("Current_Forward_Total_Reactive_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalReactivePeakEnergy).HasColumnName("Current_Forward_Total_Reactive_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalReactiveFlatEnergy).HasColumnName("Current_Forward_Total_Reactive_Flat_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentForwardTotalReactiveValleyEnergy).HasColumnName("Current_Forward_Total_Reactive_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalReactiveEnergy).HasColumnName("Current_Reversing_Total_Reactive_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalReactiveSpikeEnergy).HasColumnName("Current_Reversing_Total_Reactive_Spike_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalReactivePeakEnergy).HasColumnName("Current_Reversing_Total_Reactive_Peak_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentReversingTotalReactiveValleyEnergy).HasColumnName("Current_Reversing_Total_Reactive_Valley_Energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.RecordTime).HasColumnName("RecordTime").IsOptional().HasColumnType("datetime");
            Property(x => x.CommunicationAddress).HasColumnName("CommunicationAddress").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
            Property(x => x.CommunicationBaudrate).HasColumnName("CommunicationBaudrate").IsOptional().HasColumnType("nvarchar").HasMaxLength(30);
            Property(x => x.PulseConstant).HasColumnName("PulseConstant").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.PeriodOfTime).HasColumnName("PeriodOfTime").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.AVoltagePhase).HasColumnName("A_voltage_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BVoltagePhase).HasColumnName("B_voltage_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CVoltagePhase).HasColumnName("C_voltage_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.AElectricityPhase).HasColumnName("A_electricity_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BElectricityPhase).HasColumnName("B_electricity_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CElectricityPhase).HasColumnName("C_electricity_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.AActivePhase).HasColumnName("A_active_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BActivePhase).HasColumnName("B_active_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CActivePhase).HasColumnName("C_active_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TotalActivePhase).HasColumnName("Total_active_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.AReactivePhase).HasColumnName("A_reactive_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BReactivePhase).HasColumnName("B_reactive_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CReactivePhase).HasColumnName("C_reactive_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TotalReactivePhase).HasColumnName("Total_reactive_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.AApparentPhase).HasColumnName("A_apparent_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BApparentPhase).HasColumnName("B_apparent_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CApparentPhase).HasColumnName("C_apparent_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TotalApparentPhase).HasColumnName("Total_apparent_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.APowerFactorPhase).HasColumnName("A_power_factor_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CPowerFactorPhase).HasColumnName("C_Power_factor_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.BPowerFactorPhase).HasColumnName("B_Power_factor_phase").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.Frequency).HasColumnName("Frequency").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.StatusIndication).HasColumnName("StatusIndication").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.ActiveMaximumDemand).HasColumnName("Active_Maximum_demand").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TimeActiviveMaximum).HasColumnName("Time_activive_maximum").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TimeReactiveMaximum).HasColumnName("Time_reactive_maximum").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.VoltageLostNumber).HasColumnName("Voltage_lost_number").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.TimeVoltageLostNumber).HasColumnName("time_voltage_lost_number").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentMonthTotalActiveEnergy).HasColumnName("Current_month_total_active_energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentMonthTotalActiveSpikeEnergy).HasColumnName("Current_month_total_active_spike_energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentMonthTotalActiveFlatEnergy).HasColumnName("Current_month_total_active_flat_energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CurrentMonthTotalActiveValleyEnergy).HasColumnName("Current_month_total_active_valley_energy").IsOptional().HasColumnType("decimal").HasPrecision(18,2);
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
